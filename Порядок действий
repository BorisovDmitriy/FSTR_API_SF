1. Создали репо на гите
2. Клонировали к себе
3. Создали виртулальное окружение и активировали его
4. Устанавливаем
-- FastApi
-- Uvicorn
5. Подключаем PostgresSQL, проверил что сервер запущен, в PGAdmin сервер слушается.
6. доустановить:
--SQLAlchemy
--psycopg2-binary
!!!!Сначало создать папку sql_app  c пустым файлом __init__ и помещать туда файлы как в проекте!!!!!
7. Создаем файл database.py, нам понадобиться данные БД заложенные в переменное окружение.
Для этого устанавливаем dotenv(pip install python-dotenv) почитать про pip install -r requrements.txt
8. Создаем файл models.py,  пишем БД
9. Создаем schemas.py и заполняем
Пока кроме кортинок и все для запроса Post
10.0
-Устанавливаем Alembic  pip install alembic
-Создаем среду &:alembic init alembic
-Правим файл alembic.ini (строки 58,)
-Создайте сценарий миграции alembic revision -m "create account table"
-Переходим в файл alembic/env.py добавляем привязки к нашей базе.
Создаем файл base.py для env.py
Правим 17строку,22,58-61,
Изменения файла env.py нужны для автогенерации миграций в БД.
-Делаем первую миграцию $ alembic upgrade head
-Выполняем требование к автогенерации alembic revision --autogenerate -m "Added account table"
10. Создаем crud.py и заполняем его
11. Создаем файл errors, описываем ErrorConnectionServer

